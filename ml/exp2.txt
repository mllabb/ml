import numpy as np
from sklearn.datasets import load_iris
from sklearn.model_selection import train_test_split
from sklearn.svm import SVC
from sklearn.metrics import accuracy_score, classification_report

# Load the Iris dataset
iris = load_iris()
X = iris.data
y = iris.target
# Select only two classes for binary classification
X = X[y != 2]
y = y[y != 2]
# Split the dataset into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=42)

# Create and Train the SVM model with RBF kernel
model = SVC(kernel='rbf', gamma='scale', C=1.0)
model.fit(X_train, y_train)

# Evaluate
y_pred = model.predict(X_test)
accuracy = accuracy_score(y_test, y_pred)
report = classification_report(y_test, y_pred, target_names=iris.target_names[:2])
print(f"Accuracy: {accuracy:.2f}")
print("Classification Report:")
print(report)

# New sample
new_sample = np.array([[5.1, 3.5, 1.4, 0.2]])
# Predict the class of the new sample
new_prediction = model.predict(new_sample)
print(f"New Sample Classification: {iris.target_names[new_prediction][0]}")