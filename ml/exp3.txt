# Import necessary libraries
import numpy as np
import matplotlib.pyplot as plt
from sklearn.linear_model import LinearRegression, Ridge
from sklearn.preprocessing import PolynomialFeatures
from sklearn.metrics import mean_squared_error, r2_score

# Generate synthetic data
np.random.seed(0)
X = 2 * np.random.rand(100, 1)
y = 4 + 3 * X + np.random.randn(100, 1)

# Linear Regression
lin_reg = LinearRegression()
lin_reg.fit(X, y)
y_pred_lin = lin_reg.predict(X)
mse_lin = mean_squared_error(y, y_pred_lin)
r2_lin = r2_score(y, y_pred_lin)

# Polynomial Regression
poly_features = PolynomialFeatures(degree=2, include_bias=False)
X_poly = poly_features.fit_transform(X)
poly_reg = LinearRegression()
poly_reg.fit(X_poly, y)
y_pred_poly = poly_reg.predict(X_poly)
mse_poly = mean_squared_error(y, y_pred_poly)
r2_poly = r2_score(y, y_pred_poly)

# Ridge Regression
ridge_reg = Ridge(alpha=1.0)
ridge_reg.fit(X, y)
y_pred_ridge = ridge_reg.predict(X)
mse_ridge = mean_squared_error(y, y_pred_ridge)
r2_ridge = r2_score(y, y_pred_ridge)

# Generate range for plotting
X_range = np.linspace(X.min(), X.max(), 100).reshape(-1, 1)
X_range_poly = poly_features.transform(X_range)
y_range_poly = poly_reg.predict(X_range_poly)
y_range_ridge = ridge_reg.predict(X_range)
y_range_lin = lin_reg.predict(X_range)

# Plot Linear Regression
plt.figure(figsize=(15, 5))
plt.subplot(1, 3, 1)
plt.scatter(X, y, color='blue', label='Data points')
plt.plot(X_range, y_range_lin, color='red', label='Linear Fit')
plt.title('Linear Regression')
plt.xlabel('Feature')
plt.ylabel('Target')
plt.legend()

# Plot Polynomial Regression
plt.subplot(1, 3, 2)
plt.scatter(X, y, color='blue', label='Data points')
plt.plot(X_range, y_range_poly, color='red', label='Polynomial Fit')
plt.title('Polynomial Regression')
plt.xlabel('Feature')
plt.ylabel('Target')
plt.legend()

# Plot Ridge Regression
plt.subplot(1, 3, 3)
plt.scatter(X, y, color='blue', label='Data points')
plt.plot(X_range, y_range_ridge, color='red', label='Ridge Fit')
plt.title('Ridge Regression')
plt.xlabel('Feature')
plt.ylabel('Target')
plt.legend()

plt.tight_layout()
plt.show()
print()
print(f"Linear Regression MSE: {mse_lin:.2f}")
print(f"Polynomial Regression MSE: {mse_poly:.2f}")
print(f"Ridge Regression MSE: {mse_ridge:.2f}")
print(f"Linear Regression R² Score: {r2_lin:.2f}")
print(f"Polynomial Regression R² Score: {r2_poly:.2f}")
print(f"Ridge Regression R² Score: {r2_ridge:.2f}")